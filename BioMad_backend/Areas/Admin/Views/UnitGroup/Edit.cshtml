@using BioMad_backend.Extensions
@model UnitGroup
@inject ApplicationContext DbContext;

@{
    ViewData["Title"] = "Подробнее";
    
    if ((Model.MainUnitId == null || !Model.Units.Any(x => x.Id == Model.MainUnitId)) && Model.Units.Any())
    {
        Model.MainUnitId = Model.Units.FirstOrDefault()?.Id;
        await DbContext.SaveChangesAsync();
    }
    else if (Model.MainUnitId != null)
    {
        Model.MainUnitId = null;
        await DbContext.SaveChangesAsync();
    }
}

<div class="d-flex align-items-center mb-2 justify-content-between flex-wrap">
    <div class="d-flex align-items-center">
        <a class="btn text-primary" asp-action="Index" style="font-size: 20px">❮</a>
        <h4 class="m-0 ml-2">Группа ЕИ</h4>
    </div>
    <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@Model.Id">Удалить</a>
</div>

<hr/>
<div class="my-grid my-grid-entity-card">
    <div class="card">
            <div class="card-header p-3">Редактировать</div>
            <div class="card-body">
                <form asp-action="Edit">
                    <input hidden asp-for="Id">
                    @{
                        var mainUnitSelectList = SelectListHelpers.CreateSelectList(Model.Units.Localize(Culture.Ru),
                                x => new SelectListModel { Id = x.Id, Title = $"{x.Id} - {x.Content?.Name}" }, Model.MainUnitId ?? 0);
                    
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    @if (Model.MainUnitId != null)
                                    {
                                        <a asp-controller="Unit" asp-action="Edit" asp-route-id="@Model.MainUnitId" class="input-group-text text-primary">Основная ЕИ</a>
                                    }
                                    else
                                    {
                                        <p class="input-group-text">Основная ЕИ</p>
                                    }
                                </div>
                                <select required asp-for="MainUnitId" type="text" class="custom-select" asp-items="mainUnitSelectList"></select>
                                <span asp-validation-for="MainUnitId"></span>
                            </div>
                    }
    
                    <input class="btn btn-primary" value="Сохранить" type="submit">
                </form>
            </div>
        </div>
    
    
    
    <div class="card">
        @Html.LocalizationSection(x => x.Content, DbContext, Model, selectedCultureId: (int) ViewBag.CultureId, selectedTranslationId: (int) ViewBag.TranslationId)

        @{
            var translationAction = (string) ViewData["translationAction"];
            if (translationAction != null)
            {
                var translationEntity = translationAction == FormActionType.Edit
                    ? Model.Translations.FirstOrDefault(x => x.Id == ViewBag.TranslationId)
                    : new UnitGroupTranslation();
                @await Html.PartialAsync("_TranslationForm", translationEntity)
            }
        }
    </div>

    <div>
        <div class="card">
            <div class="card-header font-weight-bold">Единицы измерения</div>
            @{
                var items = (await DbContext.Units.Where(x => !Model.UnitIds.Contains(x.Id)).ToListAsync())
                    .OrderBy(x => x.UnitGroupIds.Count()).ThenByDescending(x => x.Id).ToList();
                var selectList = SelectListHelpers.CreateSelectList(
                    items,
                    x => new SelectListModel { Id = x.Id, Title = x.Id + " - " + x.Localize(Culture.Ru)?.Content?.Name });
                var isDisabled = items.Count == 0;

                <div class="card-body p-2">
                    <form class="d-flex" method="get" asp-action="AddUnit">
                        <div class="form-group m-0 w-100 mr-2">
                            <select disabled="@isDisabled" name="entityId" class="custom-select" asp-items="selectList">
                                @if (isDisabled)
                                {
                                    <option>Нет доступных ЕИ</option>
                                }
                            </select>
                        </div>
                        <input hidden name="containerId" value="@Model.Id">
                        <input disabled="@isDisabled" class="btn btn-primary" type="submit" value="Добавить">
                    </form>
                </div>
            }
            @Html.Table(Model.Units, x =>
            {
                x = x?.Localize(Culture.Ru) ?? x;
                return new Dictionary<string, object>
                {
                    { "Id", x.Id },
                    { "Название", x.Content?.Name }
                };
            }, x => new List<TableActionButton>
            {
                new TableActionButton
                {
                    Text = "Убрать",
                    Action = "Remove" + nameof(Unit),
                    Controller = nameof(UnitGroup),
                    Arguments = new
                    {
                        containerId = Model.Id,
                        entityId = x.Id
                    }
                }
            }, deleteAction: false)
        </div>
    </div>
</div>