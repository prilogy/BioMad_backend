@using BioMad_backend.Extensions
@model BioMad_backend.Entities.Biomarker
@inject ApplicationContext DbContext;

@{
    ViewData["Title"] = "Подробнее";

    if (Model.MainUnitId == null || !Model.UnitGroup.UnitGroups.Any(x => x.UnitId == Model.MainUnitId))
    {
        Model.MainUnitId = Model.UnitGroup.MainUnitId;
        await DbContext.SaveChangesAsync();
    }

    ViewData["biomarkerId"] = Model.Id;
    ViewData["unitGroupId"] = Model.UnitGroupId;
    ViewData["mainUnitId"] = Model.MainUnitId;
}

<div class="d-flex align-items-center mb-2 justify-content-between flex-wrap">
    <div class="d-flex align-items-center">
        <a class="btn text-primary" asp-action="Index" style="font-size: 20px">❮</a>
        <h4 class="m-0 ml-2">Биомаркер</h4>
    </div>
    <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@Model.Id">Удалить</a>
</div>
<hr/>
<div class="my-grid my-grid-entity-card">
    <div class="card">
        <div class="card-header p-3 font-weight-bold">Редактировать</div>
        <div class="card-body">
            <form asp-action="Edit">
                <input hidden asp-for="Id">
                @{
                    var typeSelectList = SelectListHelpers.CreateSelectList((await DbContext.BiomarkerTypes.ToListAsync()).Localize(Culture.Ru),
                        x => new SelectListModel { Id = x.Id, Title = $"{x.Id} - {x.Content?.Name}" }, Model.TypeId);
                    var unitGroupSelectList = SelectListHelpers.CreateSelectList((await DbContext.UnitGroups.ToListAsync()).Localize(Culture.Ru),
                        x => new SelectListModel { Id = x.Id, Title = $"{x.Id} - {x.Content?.Name}" }, Model.TypeId);

                    var mainUnitSelectList = SelectListHelpers.CreateSelectList(Model.UnitGroup.Units.Localize(Culture.Ru),
                        x => new SelectListModel { Id = x.Id, Title = $"{x.Id} - {x.Content?.Name}" }, Model.MainUnitId ?? 0);

                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <a asp-controller="BiomarkerType" asp-action="Edit" asp-route-id="@Model.TypeId" class="input-group-text text-primary">Тип</a>
                        </div>
                        <select required asp-for="TypeId" type="text" class="custom-select" asp-items="typeSelectList"></select>
                        <span asp-validation-for="TypeId"></span>
                    </div>

                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <a asp-controller="UnitGroup" asp-action="Edit" asp-route-id="@Model.UnitGroupId" class="input-group-text text-primary">Группа ЕИ</a>
                        </div>
                        <select required asp-for="UnitGroupId" type="text" class="custom-select" asp-items="unitGroupSelectList"></select>
                        <span asp-validation-for="UnitGroupId"></span>
                    </div>

                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <a asp-controller="Unit" asp-action="Edit" asp-route-id="@Model.MainUnitId" class="input-group-text text-primary">Основная ЕИ</a>
                        </div>
                        <select required asp-for="MainUnitId" type="text" class="custom-select" asp-items="mainUnitSelectList"></select>
                        <span asp-validation-for="MainUnitId"></span>
                        <p class="text m-0 mt-2" style="font-size: 14px">* в качестве основной ЕИ можно выбрать только ЕИ, входящую в указанную группу</p>
                    </div>
                }

                <input class="btn btn-primary" value="Сохранить" type="submit">
            </form>
        </div>
    </div>

    <div class="card">
        @Html.LocalizationSection(x => x.Content, DbContext, Model, selectedCultureId: (int) ViewBag.CultureId, selectedTranslationId: (int) ViewBag.TranslationId)

        @{
            var translationAction = (string) ViewData["translationAction"];
            if (translationAction != null)
            {
                var translationEntity = translationAction == FormActionType.Edit
                    ? Model.Translations.FirstOrDefault(x => x.Id == ViewBag.TranslationId)
                    : new BiomarkerTranslation();
                @await Html.PartialAsync("_TranslationForm", translationEntity)
            }
        }
    </div>

    <div class="card">
        <div class="card-header font-weight-bold p-3">Находится в категориях</div>
        @{
            var items = (await DbContext.Categories.Where(x => !Model.CategoryIds.Contains(x.Id)).ToListAsync())
                .OrderBy(x => x.BiomarkerIds.Count()).ThenByDescending(x => x.Id).ToList();
            var selectList = SelectListHelpers.CreateSelectList(
                items,
                x => new SelectListModel { Id = x.Id, Title = x.Id + " - " + x.Localize(Culture.Ru)?.Content?.Name });
            var isDisabled = items.Count == 0;
            <div class="card-body p-2">
                <form class="d-flex" method="get" asp-area="Admin" asp-controller="Category" asp-action="AddBiomarker">
                    <div class="form-group m-0 w-100 mr-2">
                        <select disabled="@isDisabled" name="containerId" class="custom-select" asp-items="selectList">
                            @if (isDisabled)
                            {
                                <option>Нет доступных категорий</option>
                            }
                        </select>
                    </div>
                    <input hidden name="entityId" value="@Model.Id">
                    <input hidden name="returnToEntity" value="true">
                    <input disabled="@isDisabled" class="btn btn-primary" type="submit" value="Добавить">
                </form>
            </div>
        }

        @Html.Table(Model.Categories, x =>
        {
            x = x?.Localize(Culture.Ru) ?? x;
            return new Dictionary<string, object>
            {
                { "Id", x.Id },
                { "Название", x.Content?.Name }
            };
        }, x => new List<TableActionButton>
        {
            new TableActionButton
            {
                Text = "Убрать",
                Action = "Remove" + nameof(Biomarker),
                Controller = nameof(Category),
                Arguments = new
                {
                    entityId = Model.Id,
                    containerId = x.Id,
                    returnToEntity = true
                }
            }
        }, deleteAction: false)
    </div>

    <div class="card">
        <div class="card-header p-3">Статьи</div>

        <table class="table table-bordered">
            <thead>
            <tr>
                <th class="pl-3">Тип</th>
                <th>Статья</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in BiomarkerArticleType.All)
            {
                var matchedNav = Model.BiomarkerArticles.FirstOrDefault(x => x.TypeId == item.Id);
                var matchedArticle = matchedNav?.Article;

                var articleSelectList = SelectListHelpers.CreateSelectList((await DbContext.Articles.ToListAsync()).OrderBy(x => x.BiomarkerArticles.Count).ThenByDescending(x => x.Id), x => new SelectListModel
                {
                    Id = x.Id,
                    Title = x.Id + " - " + x.Localize(Culture.Ru)?.Content?.Name
                }, matchedArticle?.Id ?? 0);

                var articleFormId = "articleForm" + item.Id;

                <tr>
                    <form id="@articleFormId" asp-action="AddArticle"></form>
                    <input form="@articleFormId" hidden name="typeId" value="@item.Id"/>
                    <input form="@articleFormId" hidden name="biomarkerId" value="@Model.Id"/>
                    <td style="font-size: 12px">@item.Name</td>
                    <td>
                        <select form="@articleFormId" style="max-width: 200px" name="articleId" class="custom-select custom-select-sm @(matchedArticle == null ? "" : "border-primary")" asp-items="articleSelectList"></select>
                    </td>
                    <td class="p-0">

                        @if (matchedArticle == null)
                        {
                            <input form="@articleFormId" style="width: 100%;" type="submit" class="btn btn-sm btn-outline-primary border-0 py-3" value="Добавить">
                        }
                        else
                        {
                            <div class="d-flex flex-column">
                                <input form="@articleFormId" type="submit" class="btn btn-sm btn-outline-primary border-0" value="Сохранить">
                                <a asp-area="Admin" asp-controller="Biomarker" asp-action="RemoveArticle" asp-route-navId="@matchedNav.Id" class="btn btn-sm btn-outline-danger border-0">Убрать</a>
                            </div>
                        }
                    </td>

                </tr>
            }
            </tbody>
        </table>

    </div>
</div>
<div class="card mt-3">
    <div class="card-header p-3 font-weight-bold">Референсы</div>
    <table class="table table-bordered">
        <thead>
        <tr>
            <th class="pl-3"></th>
            <th></th>
            <th class="font-weight-bold border-right-0">Возраст</th>
            <th class="font-weight-bold border-left-0"></th>
            <th style="min-width: 70px"></th>
            <th class="font-weight-bold border-right-0">Значение</th>
            <th class="border-left-0"></th>
            <th class="border-left-0"></th>
        </tr>
        <tr>
            <th class="pl-3 font-weight-bold">Id</th>
            <th class="font-weight-bold">Пол</th>
            <th class="font-weight-bold">Низ</th>
            <th class="font-weight-bold">Верх</th>
            <th class="font-weight-bold">ЕИ</th>
            <th class="font-weight-bold">Низ</th>
            <th class="font-weight-bold">Верх</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var x in Model.References.Select(BiomarkerReferenceModel.FromReference).OrderBy(x => x.GenderId).ThenBy(x => x.Id))
        {
            @await Html.PartialAsync("_ReferenceEditForm", x)
        }

        @await Html.PartialAsync("_ReferenceCreateForm", new BiomarkerReferenceModel())
        </tbody>
    </table>
</div>